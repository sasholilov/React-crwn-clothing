{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Aleksandar\\\\Desktop\\\\Udemy\\\\React\\\\crwn-clothing\\\\src\\\\contexts\\\\cart.context.jsx\",\n  _s = $RefreshSig$();\nimport { createContext, useReducer } from \"react\";\nimport { createAction } from \"../utils/reducer/reducer.utils\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst addCartItem = (cartItems, productToAdd) => {\n  //find if cartitems contains productToAdd\n  const existingCartItem = cartItems.find(cartItem => cartItem.id === productToAdd.id);\n\n  //If found, increment quantity\n  if (existingCartItem) {\n    return cartItems.map(cartItem => cartItem.id === productToAdd.id ? {\n      ...cartItem,\n      quantity: cartItem.quantity + 1\n    } : cartItem);\n  }\n\n  //return new arra with modified cartItems/ new cart item\n  return [...cartItems, {\n    ...productToAdd,\n    quantity: 1\n  }];\n};\nconst removeCartItem = (cartItems, cartItemToRemove) => {\n  //find the cart item to remove\n  const existingCartItem = cartItems.find(cartItem => cartItem.id === cartItemToRemove.id);\n\n  //check if quantity is equal to 1, if it is remove the item from cart\n  if (existingCartItem.quantity === 1) {\n    return cartItems.filter(cartItem => cartItem.id !== cartItemToRemove.id);\n  }\n\n  //return back cart items with matching cart item with reduced quantity\n  return cartItems.map(cartItem => cartItem.id === cartItemToRemove.id ? {\n    ...cartItem,\n    quantity: cartItem.quantity - 1\n  } : cartItem);\n};\nconst clearCartItem = (cartItems, cartItemToClear) => {\n  return cartItems.filter(cartItem => cartItem.id !== cartItemToClear.id);\n};\nexport const CartContext = /*#__PURE__*/createContext({\n  isCartOpen: false,\n  setIsCartOpen: () => {},\n  cartItems: [],\n  addItemToCart: () => {},\n  removeItemFromCart: () => {},\n  clearItemFromCart: () => {},\n  cartCount: 0,\n  cartTotal: 0\n});\nconst CART_ACTION_TYPES = {\n  SET_CART_ITEMS: \"SET_CART_ITEMS\",\n  SET_IS_CART_OPEN: \"SET_IS_CART_OPEN\"\n};\nconst INITIAL_STATE = {\n  isCartOpen: false,\n  cartItems: [],\n  cartCount: 0,\n  cartTotal: 0\n};\nconst cartReducer = (state, action) => {\n  const {\n    type,\n    payload\n  } = action;\n  switch (type) {\n    case \"SET_CART_ITEMS\":\n      return {\n        ...state,\n        ...payload\n      };\n    case CART_ACTION_TYPES.SET_IS_CART_OPEN:\n      return {\n        ...state,\n        isCartOpen: payload\n      };\n    default:\n      throw new Error(`unhandled type of ${type} of cartReducer`);\n  }\n};\nexport const CartProvider = _ref => {\n  _s();\n  let {\n    children\n  } = _ref;\n  //  const [isCartOpen, setIsCartOpen] = useState(false);\n  //  const [cartItems, setCartItems] = useState([]);\n  //  const [cartCount, setCartCount] = useState(0);\n  //  const [cartTotal, setCartTotal] = useState(0);\n\n  const [{\n    cartItems,\n    isCartOpen,\n    cartCount,\n    cartTotal\n  }, dispatch] = useReducer(cartReducer, INITIAL_STATE);\n\n  //  useEffect(() => {\n  //    const newCartCount = cartItems.reduce(\n  //      (total, cartItem) => total + cartItem.quantity,\n  //      0\n  //    );\n  //    setCartCount(newCartCount);\n  //  }, [cartItems]);\n  //\n  //  useEffect(() => {\n  //    const newCartTotal = cartItems.reduce(\n  //      (total, cartItem) => total + cartItem.quantity * cartItem.price,\n  //      0\n  //    );\n  //    setCartTotal(newCartTotal);\n  //  }, [cartItems]);\n\n  const updateCartItemsReducer = newCartItems => {\n    const newCartCount = newCartItems.reduce((total, cartItem) => total + cartItem.quantity, 0);\n    const newCartTotal = newCartItems.reduce((total, cartItem) => total + cartItem.quantity * cartItem.price, 0);\n    dispatch(createAction(CART_ACTION_TYPES.SET_CART_ITEMS, {\n      cartItems: newCartItems,\n      cartTotal: newCartTotal,\n      cartCount: newCartCount\n    }));\n  };\n  const addItemToCart = productToAdd => {\n    const newCartItems = addCartItem(cartItems, productToAdd);\n    updateCartItemsReducer(newCartItems);\n  };\n  const removeItemToCart = cartItemToRemove => {\n    const newCartItems = removeCartItem(cartItems, cartItemToRemove);\n    updateCartItemsReducer(newCartItems);\n  };\n  const clearItemFromCart = cartItemToClear => {\n    const newCartItems = clearCartItem(cartItems, cartItemToClear);\n    updateCartItemsReducer(newCartItems);\n  };\n  const setIsCartOpen = bool => {\n    dispatch({\n      type: CART_ACTION_TYPES.SET_IS_CART_OPEN,\n      payload: bool\n    });\n  };\n  const value = {\n    isCartOpen,\n    setIsCartOpen,\n    addItemToCart,\n    removeItemToCart,\n    clearItemFromCart,\n    cartItems,\n    cartCount,\n    cartTotal\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 163,\n    columnNumber: 10\n  }, this);\n};\n_s(CartProvider, \"3paH1pqC9GUp4D7OqFgw8GuVIi0=\");\n_c = CartProvider;\nvar _c;\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["createContext","useReducer","createAction","jsxDEV","_jsxDEV","addCartItem","cartItems","productToAdd","existingCartItem","find","cartItem","id","map","quantity","removeCartItem","cartItemToRemove","filter","clearCartItem","cartItemToClear","CartContext","isCartOpen","setIsCartOpen","addItemToCart","removeItemFromCart","clearItemFromCart","cartCount","cartTotal","CART_ACTION_TYPES","SET_CART_ITEMS","SET_IS_CART_OPEN","INITIAL_STATE","cartReducer","state","action","type","payload","Error","CartProvider","_ref","_s","children","dispatch","updateCartItemsReducer","newCartItems","newCartCount","reduce","total","newCartTotal","price","removeItemToCart","bool","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Aleksandar/Desktop/Udemy/React/crwn-clothing/src/contexts/cart.context.jsx"],"sourcesContent":["import { createContext, useReducer } from \"react\";\r\nimport { createAction } from \"../utils/reducer/reducer.utils\";\r\n\r\nconst addCartItem = (cartItems, productToAdd) => {\r\n  //find if cartitems contains productToAdd\r\n  const existingCartItem = cartItems.find(\r\n    (cartItem) => cartItem.id === productToAdd.id\r\n  );\r\n\r\n  //If found, increment quantity\r\n  if (existingCartItem) {\r\n    return cartItems.map((cartItem) =>\r\n      cartItem.id === productToAdd.id\r\n        ? { ...cartItem, quantity: cartItem.quantity + 1 }\r\n        : cartItem\r\n    );\r\n  }\r\n\r\n  //return new arra with modified cartItems/ new cart item\r\n  return [...cartItems, { ...productToAdd, quantity: 1 }];\r\n};\r\n\r\nconst removeCartItem = (cartItems, cartItemToRemove) => {\r\n  //find the cart item to remove\r\n  const existingCartItem = cartItems.find(\r\n    (cartItem) => cartItem.id === cartItemToRemove.id\r\n  );\r\n\r\n  //check if quantity is equal to 1, if it is remove the item from cart\r\n  if (existingCartItem.quantity === 1) {\r\n    return cartItems.filter((cartItem) => cartItem.id !== cartItemToRemove.id);\r\n  }\r\n\r\n  //return back cart items with matching cart item with reduced quantity\r\n  return cartItems.map((cartItem) =>\r\n    cartItem.id === cartItemToRemove.id\r\n      ? { ...cartItem, quantity: cartItem.quantity - 1 }\r\n      : cartItem\r\n  );\r\n};\r\n\r\nconst clearCartItem = (cartItems, cartItemToClear) => {\r\n  return cartItems.filter((cartItem) => cartItem.id !== cartItemToClear.id);\r\n};\r\n\r\nexport const CartContext = createContext({\r\n  isCartOpen: false,\r\n  setIsCartOpen: () => {},\r\n  cartItems: [],\r\n  addItemToCart: () => {},\r\n  removeItemFromCart: () => {},\r\n  clearItemFromCart: () => {},\r\n  cartCount: 0,\r\n  cartTotal: 0,\r\n});\r\n\r\nconst CART_ACTION_TYPES = {\r\n  SET_CART_ITEMS: \"SET_CART_ITEMS\",\r\n  SET_IS_CART_OPEN: \"SET_IS_CART_OPEN\",\r\n};\r\n\r\nconst INITIAL_STATE = {\r\n  isCartOpen: false,\r\n  cartItems: [],\r\n  cartCount: 0,\r\n  cartTotal: 0,\r\n};\r\n\r\nconst cartReducer = (state, action) => {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case \"SET_CART_ITEMS\":\r\n      return {\r\n        ...state,\r\n        ...payload,\r\n      };\r\n    case CART_ACTION_TYPES.SET_IS_CART_OPEN:\r\n      return {\r\n        ...state,\r\n        isCartOpen: payload,\r\n      };\r\n    default:\r\n      throw new Error(`unhandled type of ${type} of cartReducer`);\r\n  }\r\n};\r\n\r\nexport const CartProvider = ({ children }) => {\r\n  //  const [isCartOpen, setIsCartOpen] = useState(false);\r\n  //  const [cartItems, setCartItems] = useState([]);\r\n  //  const [cartCount, setCartCount] = useState(0);\r\n  //  const [cartTotal, setCartTotal] = useState(0);\r\n\r\n  const [{ cartItems, isCartOpen, cartCount, cartTotal }, dispatch] =\r\n    useReducer(cartReducer, INITIAL_STATE);\r\n\r\n  //  useEffect(() => {\r\n  //    const newCartCount = cartItems.reduce(\r\n  //      (total, cartItem) => total + cartItem.quantity,\r\n  //      0\r\n  //    );\r\n  //    setCartCount(newCartCount);\r\n  //  }, [cartItems]);\r\n  //\r\n  //  useEffect(() => {\r\n  //    const newCartTotal = cartItems.reduce(\r\n  //      (total, cartItem) => total + cartItem.quantity * cartItem.price,\r\n  //      0\r\n  //    );\r\n  //    setCartTotal(newCartTotal);\r\n  //  }, [cartItems]);\r\n\r\n  const updateCartItemsReducer = (newCartItems) => {\r\n    const newCartCount = newCartItems.reduce(\r\n      (total, cartItem) => total + cartItem.quantity,\r\n      0\r\n    );\r\n\r\n    const newCartTotal = newCartItems.reduce(\r\n      (total, cartItem) => total + cartItem.quantity * cartItem.price,\r\n      0\r\n    );\r\n\r\n    dispatch(\r\n      createAction(CART_ACTION_TYPES.SET_CART_ITEMS, {\r\n        cartItems: newCartItems,\r\n        cartTotal: newCartTotal,\r\n        cartCount: newCartCount,\r\n      })\r\n    );\r\n  };\r\n\r\n  const addItemToCart = (productToAdd) => {\r\n    const newCartItems = addCartItem(cartItems, productToAdd);\r\n    updateCartItemsReducer(newCartItems);\r\n  };\r\n\r\n  const removeItemToCart = (cartItemToRemove) => {\r\n    const newCartItems = removeCartItem(cartItems, cartItemToRemove);\r\n    updateCartItemsReducer(newCartItems);\r\n  };\r\n\r\n  const clearItemFromCart = (cartItemToClear) => {\r\n    const newCartItems = clearCartItem(cartItems, cartItemToClear);\r\n    updateCartItemsReducer(newCartItems);\r\n  };\r\n\r\n  const setIsCartOpen = (bool) => {\r\n    dispatch({ type: CART_ACTION_TYPES.SET_IS_CART_OPEN, payload: bool });\r\n  };\r\n\r\n  const value = {\r\n    isCartOpen,\r\n    setIsCartOpen,\r\n    addItemToCart,\r\n    removeItemToCart,\r\n    clearItemFromCart,\r\n    cartItems,\r\n    cartCount,\r\n    cartTotal,\r\n  };\r\n\r\n  return <CartContext.Provider value={value}>{children}</CartContext.Provider>;\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}