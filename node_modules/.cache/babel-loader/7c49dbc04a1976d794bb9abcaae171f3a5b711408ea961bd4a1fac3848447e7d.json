{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Aleksandar\\\\Desktop\\\\Udemy\\\\React\\\\crwn-clothing\\\\src\\\\contexts\\\\cart.context.jsx\",\n  _s = $RefreshSig$();\nimport { createContext, useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst addCartItem = (cartItems, productToAdd) => {\n  //find if cartitems contains productToAdd\n  const existingCartItem = cartItems.find(cartItem => cartItem.id === productToAdd.id);\n\n  //If found, increment quantity\n  if (existingCartItem) {\n    return cartItems.map(cartItem => cartItem.id === productToAdd.id ? {\n      ...cartItem,\n      quantity: cartItem.quantity + 1\n    } : cartItem);\n  }\n\n  //return new arra with modified cartItems/ new cart item\n  return [...cartItems, {\n    ...productToAdd,\n    quantity: 1\n  }];\n};\nconst removeCartItem = (cartItems, cartItemToRemove) => {\n  //find the cart item to remove\n  const existingCartItem = cartItems.find(cartItem => cartItem.id === cartItemToRemove.id);\n\n  //check if quantity is equal to 1, if it is remove the item from cart\n  if (existingCartItem.quantity === 1) {\n    return cartItems.filter(cartItem => cartItem.id != cartItemToRemove.id);\n  }\n\n  //return back cart items with matching cart item with reduced quantity\n  return cartItems.map(cartItem => cartItem.id === cartItemToRemove.id ? {\n    ...cartItem,\n    quantity: cartItem.quantity - 1\n  } : cartItem);\n};\nexport const CartContext = /*#__PURE__*/createContext({\n  isCartOpen: false,\n  setIsCartOpen: () => {},\n  cartItems: [],\n  addItemToCart: () => {},\n  removeItemFromCart: () => {},\n  clearItemFromCart: () => {},\n  cartCount: 0\n});\nexport const CartProvider = _ref => {\n  _s();\n  let {\n    children\n  } = _ref;\n  const [isCartOpen, setIsCartOpen] = useState(false);\n  const [cartItems, setCartItems] = useState([]);\n  const [cartCount, setCartCount] = useState(0);\n  useEffect(() => {\n    const newCartCount = cartItems.reduce((total, cartItem) => total + cartItem.quantity, 0);\n    setCartCount(newCartCount);\n  }, [cartItems]);\n  const addItemToCart = productToAdd => {\n    setCartItems(addCartItem(cartItems, productToAdd));\n  };\n  const removeItemToCart = cartItemToRemove => {\n    setCartItems(removeCartItem(cartItems, cartItemToRemove));\n  };\n  const clearItemToCart = cartItemToRemove => {\n    setCartItems(clearCartItem(cartItems, cartItemToRemove));\n  };\n  const value = {\n    isCartOpen,\n    setIsCartOpen,\n    addItemToCart,\n    removeItemToCart,\n    cartItems,\n    cartCount\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 10\n  }, this);\n};\n_s(CartProvider, \"1STVRVZJMMTq6OZavO9o7qwZdno=\");\n_c = CartProvider;\nvar _c;\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["createContext","useEffect","useState","jsxDEV","_jsxDEV","addCartItem","cartItems","productToAdd","existingCartItem","find","cartItem","id","map","quantity","removeCartItem","cartItemToRemove","filter","CartContext","isCartOpen","setIsCartOpen","addItemToCart","removeItemFromCart","clearItemFromCart","cartCount","CartProvider","_ref","_s","children","setCartItems","setCartCount","newCartCount","reduce","total","removeItemToCart","clearItemToCart","clearCartItem","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Aleksandar/Desktop/Udemy/React/crwn-clothing/src/contexts/cart.context.jsx"],"sourcesContent":["import { createContext, useEffect, useState } from \"react\";\r\n\r\nconst addCartItem = (cartItems, productToAdd) => {\r\n  //find if cartitems contains productToAdd\r\n  const existingCartItem = cartItems.find(\r\n    (cartItem) => cartItem.id === productToAdd.id\r\n  );\r\n\r\n  //If found, increment quantity\r\n  if (existingCartItem) {\r\n    return cartItems.map((cartItem) =>\r\n      cartItem.id === productToAdd.id\r\n        ? { ...cartItem, quantity: cartItem.quantity + 1 }\r\n        : cartItem\r\n    );\r\n  }\r\n\r\n  //return new arra with modified cartItems/ new cart item\r\n  return [...cartItems, { ...productToAdd, quantity: 1 }];\r\n};\r\n\r\nconst removeCartItem = (cartItems, cartItemToRemove) => {\r\n  //find the cart item to remove\r\n  const existingCartItem = cartItems.find(\r\n    (cartItem) => cartItem.id === cartItemToRemove.id\r\n  );\r\n\r\n  //check if quantity is equal to 1, if it is remove the item from cart\r\n  if (existingCartItem.quantity === 1) {\r\n    return cartItems.filter((cartItem) => cartItem.id != cartItemToRemove.id);\r\n  }\r\n\r\n  //return back cart items with matching cart item with reduced quantity\r\n  return cartItems.map((cartItem) =>\r\n    cartItem.id === cartItemToRemove.id\r\n      ? { ...cartItem, quantity: cartItem.quantity - 1 }\r\n      : cartItem\r\n  );\r\n};\r\n\r\nexport const CartContext = createContext({\r\n  isCartOpen: false,\r\n  setIsCartOpen: () => {},\r\n  cartItems: [],\r\n  addItemToCart: () => {},\r\n  removeItemFromCart: () => {},\r\n  clearItemFromCart: () => {},\r\n  cartCount: 0,\r\n});\r\n\r\nexport const CartProvider = ({ children }) => {\r\n  const [isCartOpen, setIsCartOpen] = useState(false);\r\n  const [cartItems, setCartItems] = useState([]);\r\n  const [cartCount, setCartCount] = useState(0);\r\n\r\n  useEffect(() => {\r\n    const newCartCount = cartItems.reduce(\r\n      (total, cartItem) => total + cartItem.quantity,\r\n      0\r\n    );\r\n    setCartCount(newCartCount);\r\n  }, [cartItems]);\r\n\r\n  const addItemToCart = (productToAdd) => {\r\n    setCartItems(addCartItem(cartItems, productToAdd));\r\n  };\r\n\r\n  const removeItemToCart = (cartItemToRemove) => {\r\n    setCartItems(removeCartItem(cartItems, cartItemToRemove));\r\n  };\r\n\r\n  const clearItemToCart = (cartItemToRemove) => {\r\n    setCartItems(clearCartItem(cartItems, cartItemToRemove));\r\n  };\r\n\r\n  const value = {\r\n    isCartOpen,\r\n    setIsCartOpen,\r\n    addItemToCart,\r\n    removeItemToCart,\r\n    cartItems,\r\n    cartCount,\r\n  };\r\n\r\n  return <CartContext.Provider value={value}>{children}</CartContext.Provider>;\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}